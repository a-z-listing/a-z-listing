{"version":3,"sources":["block.jsx"],"names":["wp","registerBlockType","blocks","el","element","createElement","__","i18n","map","Array","keys","Object","withState","components","withAPIData","SandBox","InspectorControls","RangeControl","SelectControl","TextControl","ToggleControl","getFilteredTaxonomies","props","attributes","display","r","postTypes","data","taxonomies","tax","idx","value","label","name","taxonomy","unshift","getAppendQueryFactory","query","param","getPreview","preview","rendered","title","icon","category","supports","html","type","default","terms","numbers","grouping","edit","postType","groupNumbers","getAppendQuery","alphabet","onChange","prop","val","propObj","setAttributes","save","window"],"mappings":"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","file":"block.js","sourcesContent":["( function( wp ) {\n\t/**\n\t * Registers a new block provided a unique name and an object defining its behavior.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/blocks#api\n\t */\n\tvar registerBlockType = wp.blocks.registerBlockType;\n\t/**\n\t * Returns a new element of given type. Element is an abstraction layer atop React.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/element#element\n\t */\n\tvar el = wp.element.createElement;\n\t/**\n\t * Retrieves the translation of text.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/i18n#api\n\t */\n\tvar __ = wp.i18n.__;\n\n\tvar map = Array.map,\n\t    keys = Object.keys;\n\n\tvar withState   = wp.components.withState,\n\t\twithAPIData = wp.components.withAPIData,\n\t\tSandBox     = wp.components.SandBox;\n\n\tvar InspectorControls = wp.blocks.InspectorControls,\n\t    RangeControl      = wp.components.RangeControl,\n\t    SelectControl     = wp.components.SelectControl,\n\t    TextControl       = wp.components.TextControl,\n\t    ToggleControl     = wp.components.ToggleControl;\n\n\tfunction getFilteredTaxonomies( props ) {\n\t\tif ( 'posts' === props.attributes.display ) {\n\t\t\tlet r = map( props.postTypes.data[ props.attributes['post-type'] ].taxonomies, ( tax, idx ) => ( {\n\t\t\t\t\tvalue: tax,\n\t\t\t\t\tlabel: props.taxonomies.data[ tax ].name || taxonomy\n\t\t\t\t} ) );\n\t\t\tr.unshift( { value: '', label: '' } );\n\t\t\treturn r;\n\t\t}\n\n\t\tlet r = map( keys( props.taxonomies.data ), ( tax, idx ) => ( {\n\t\t\t\tvalue: tax,\n\t\t\t\tlabel: props.taxonomies.data[ tax ].name,\n\t\t\t} ) );\n\t\tr.unshift( { value: '', label: '' } );\n\t\treturn r;\n\t}\n\n\tfunction getAppendQueryFactory() {\n\t\tlet query = '';\n\n\t\treturn function( param ) {\n\t\t\tif ( ! param ) {\n\t\t\t\treturn query;\n\t\t\t}\n\n\t\t\tif ( '' !== query ) {\n\t\t\t\tquery = `${query}&${param}`;\n\t\t\t} else {\n\t\t\t\tquery = param;\n\t\t\t}\n\n\t\t\treturn query;\n\t\t}\n\t}\n\n\tfunction getPreview( props ) {\n\t\tif ( ! props.preview.data ) {\n\t\t\tif ( 'terms' === props.attributes.display && ! props.attributes.taxonomy ) {\n\t\t\t\treturn (\n\t\t\t\t\t<p>{ __( 'Your settings are incomplete. Try selecting a taxonomy...' ) }</p>\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<p>{ __( 'Loading...' ) }</p>\n\t\t\t);\n\t\t}\n\t\tif ( ! props.preview.data.rendered ) {\n\t\t\treturn (\n\t\t\t\t<p>{ __( 'There was an error generating the preview. Check your settings.' ) }</p>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<SandBox html={ props.preview.data.rendered } />\n\t\t);\n\t}\n\n\t/**\n\t * Every block starts by registering a new block type definition.\n\t * @see https://wordpress.org/gutenberg/handbook/block-api/\n\t */\n\tregisterBlockType( 'a-z-listing/a-z-listing', {\n\t\ttitle: __( 'A-Z Listing' ),\n\t\ticon: 'translation',\n\n\t\t/**\n\t\t * Blocks are grouped into categories to help users browse and discover them.\n\t\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t\t */\n\t\tcategory: 'widgets',\n\t\tsupports: {\n\t\t\t// Removes support for an HTML mode.\n\t\t\thtml: false,\n\t\t},\n\n\t\tattributes: {\n\t\t\tdisplay:         { type: 'string',  default: 'posts' },\n\t\t\t'post-type':     { type: 'string',  default: 'page'  },\n\t\t\tterms:           { type: 'string',  default: ''      },\n\t\t\ttaxonomy:        { type: 'string',  default: ''      },\n\t\t\tnumbers:         { type: 'string',  default: ''      },\n\t\t\tgrouping:        { type: 'number',  default: 1       },\n\t\t\t'group-numbers': { type: 'boolean', default: false   },\n\t\t},\n\n\t\t/**\n\t\t * The edit function describes the structure of your block in the context of the editor.\n\t\t * This represents what the editor will render when the block is used.\n\t\t * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#edit\n\t\t *\n\t\t * @param {Object} [props] Properties passed from the editor.\n\t\t * @return {Element}       Element to render.\n\t\t */\n\t\tedit: withState( function() {\n\t\t\treturn {\n\t\t\t\tdisplay: 'posts',\n\t\t\t\tpostType: 'page',\n\t\t\t\ttaxonomy: 'category',\n\t\t\t\tterms: '',\n\t\t\t\tgrouping: 1,\n\t\t\t\tgroupNumbers: false,\n\t\t\t};\n\t\t} ) ( withAPIData( function( props ) {\n\t\t\tlet display = 'posts';\n\t\t\tif ( 'posts' === props.attributes.display || 'terms' === props.attributes.display ) {\n\t\t\t\tdisplay = props.attributes.display || 'posts';\n\t\t\t}\n\n\t\t\tlet postType;\n\t\t\tif ( 'terms' === display ) {\n\t\t\t\tpostType = props.attributes.taxonomy || 'category';\n\t\t\t} else {\n\t\t\t\tpostType = props.attributes.postType || 'page';\n\t\t\t}\n\n\t\t\tconst getAppendQuery = getAppendQueryFactory();\n\n\t\t\tif ( !! props.attributes.alphabet ) {\n\t\t\t\tgetAppendQuery( `alphabet=${props.attributes.alphabet}` );\n\t\t\t}\n\n\t\t\tif ( !! props.attributes.grouping ) {\n\t\t\t\tgetAppendQuery( `grouping=${props.attributes.grouping}` );\n\t\t\t}\n\n\t\t\tif ( !! props.attributes.groupNumbers ) {\n\t\t\t\tgetAppendQuery( `group-numbers=${props.attributes.groupNumbers}` );\n\t\t\t}\n\n\t\t\tif ( !! props.attributes.numbers ) {\n\t\t\t\tgetAppendQuery( `numbers=${props.attributes.numbers}` );\n\t\t\t}\n\n\t\t\tif ( !! props.attributes.taxonomy ) {\n\t\t\t\tgetAppendQuery( `taxonomy=${props.attributes.taxonomy}` );\n\t\t\t}\n\n\t\t\tif ( 'posts' === display && !! props.attributes.terms ) {\n\t\t\t\tgetAppendQuery( `terms=${props.attributes.terms}` );\n\t\t\t}\n\n\t\t\tconst query = getAppendQuery( 'include-styles=true' );\n\n\t\t\treturn {\n\t\t\t\tpostTypes: '/wp/v2/types',\n\t\t\t\ttaxonomies: '/wp/v2/taxonomies',\n\t\t\t\tpreview: `/a-z-listing/v1/${display}/${postType}?${query}`\n\t\t\t};\n\t\t} ) ( function( props ) {\n\t\t\tif ( ! props.postTypes.data || ! props.taxonomies.data ) {\n\t\t\t\treturn __( \"Loading...\" );\n\t\t\t}\n\n\t\t\tfunction onChange( prop ) {\n\t\t\t\treturn function( val ) {\n\t\t\t\t\tvar propObj = {}\n\t\t\t\t\tpropObj[prop] = val\n\t\t\t\t\tprops.setAttributes( propObj );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst preview = getPreview( props );\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Display mode' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.display }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: 'posts', label: __( 'Posts' ) },\n\t\t\t\t\t\t\t\t{ value: 'terms', label: __( 'Taxonomy terms' ) }\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ onChange( 'display' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ ( 'posts' === props.attributes.display ) ? (\n\t\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Post Type' ) }\n\t\t\t\t\t\t\t\tvalue={ props.attributes['post-type'] }\n\t\t\t\t\t\t\t\toptions={ map( keys( props.postTypes.data ), ( type, idx ) => ( {\n\t\t\t\t\t\t\t\t\tvalue: type,\n\t\t\t\t\t\t\t\t\tlabel: props.postTypes.data[type].name,\n\t\t\t\t\t\t\t\t} ) ) }\n\t\t\t\t\t\t\t\tonChange={ onChange( 'post-type' ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null }\n\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Taxonomy' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.taxonomy }\n\t\t\t\t\t\t\toptions={ getFilteredTaxonomies( props ) }\n\t\t\t\t\t\t\tonChange={ onChange( 'taxonomy' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ ( 'posts' === props.attributes.display && !! props.attributes.taxonomy ) ? (\n\t\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\t\tlabel={ __( 'Taxonomy terms' ) }\n\t\t\t\t\t\t\t\tvalue={ props.attributes.terms }\n\t\t\t\t\t\t\t\tonChange={ onChange( 'terms' ) }\n\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null }\n\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Numbers' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.numbers }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: 'hide',   label: __( 'Hide numbers' ) },\n\t\t\t\t\t\t\t\t{ value: 'before', label: __( 'Prepend before alphabet' ) },\n\t\t\t\t\t\t\t\t{ value: 'after',  label: __( 'Append after alphabet' ) },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ onChange( 'numbers' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Group letters' ) }\n\t\t\t\t\t\t\thelp={ __( 'The number of letters to include in a single group' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.grouping || 1 }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tmax={ 10 }\n\t\t\t\t\t\t\tonChange={ onChange( 'grouping' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Group numbers' ) }\n\t\t\t\t\t\t\thelp={ __( 'Group 0-9 as a single letter' ) }\n\t\t\t\t\t\t\tchecked={ !! props.attributes['group-numbers'] }\n\t\t\t\t\t\t\tonChange={ onChange( 'group-numbers' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t{ preview }\n\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t} ) ),\n\n\t\t/**\n\t\t * The save function defines the way in which the different attributes should be combined\n\t\t * into the final markup, which is then serialized by Gutenberg into `post_content`.\n\t\t * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#save\n\t\t *\n\t\t * @return {Element}       Element to render.\n\t\t */\n\t\tsave: function() {\n\t\t\treturn (\n\t\t\t\t<div>{ __( 'The A-Z Listing plugin is not currently enabled' ) }</div>\n\t\t\t);\n\t\t}\n\t} );\n} )(\n\twindow.wp\n);\n"]}