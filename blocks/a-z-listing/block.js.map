{"version":3,"sources":["block.jsx"],"names":["wp","registerBlockType","blocks","el","element","createElement","__","i18n","map","Array","keys","Object","withAPIData","components","InspectorControls","RangeControl","SelectControl","TextControl","ToggleControl","getFilteredTaxonomies","props","attributes","display","r","postTypes","data","taxonomies","tax","idx","value","label","name","taxonomy","unshift","title","icon","category","supports","html","type","default","terms","numbers","grouping","edit","onChange","prop","val","propObj","setAttributes","postTypeControl","termsControl","preview","save","window"],"mappings":";;AAAA,CAAE,UAAUA,EAAV,EAAe;AAChB;;;;AAIA,KAAIC,oBAAoBD,GAAGE,MAAH,CAAUD,iBAAlC;AACA;;;;AAIA,KAAIE,KAAKH,GAAGI,OAAH,CAAWC,aAApB;AACA;;;;AAIA,KAAIC,KAAKN,GAAGO,IAAH,CAAQD,EAAjB;;AAEA,KAAIE,MAAMC,MAAMD,GAAhB;AAAA,KACIE,OAAOC,OAAOD,IADlB;;AAGA,KAAIE,cAAcZ,GAAGa,UAAH,CAAcD,WAAhC;;AAEA,KAAIE,oBAAoBd,GAAGE,MAAH,CAAUY,iBAAlC;AAAA,KACIC,eAAoBf,GAAGa,UAAH,CAAcE,YADtC;AAAA,KAEIC,gBAAoBhB,GAAGa,UAAH,CAAcG,aAFtC;AAAA,KAGIC,cAAoBjB,GAAGa,UAAH,CAAcI,WAHtC;AAAA,KAIIC,gBAAoBlB,GAAGa,UAAH,CAAcK,aAJtC;;AAMA,UAASC,qBAAT,CAAgCC,KAAhC,EAAwC;AACvC,MAAK,YAAYA,MAAMC,UAAN,CAAiBC,OAAlC,EAA4C;AAC3C,OAAIC,KAAIf,IAAKY,MAAMI,SAAN,CAAgBC,IAAhB,CAAsBL,MAAMC,UAAN,CAAiB,WAAjB,CAAtB,EAAsDK,UAA3D,EAAuE,UAAEC,GAAF,EAAOC,GAAP;AAAA,WAAkB;AAC/FC,YAAOF,GADwF;AAE/FG,YAAOV,MAAMM,UAAN,CAAiBD,IAAjB,CAAuBE,GAAvB,EAA6BI,IAA7B,IAAqCC;AAFmD,KAAlB;AAAA,IAAvE,CAAR;AAIAT,MAAEU,OAAF,CAAW,EAAEJ,OAAO,EAAT,EAAaC,OAAO,EAApB,EAAX;AACA,UAAOP,EAAP;AACA;;AAED,MAAIA,IAAIf,IAAKE,KAAMU,MAAMM,UAAN,CAAiBD,IAAvB,CAAL,EAAoC,UAAEE,GAAF,EAAOC,GAAP;AAAA,UAAkB;AAC5DC,WAAOF,GADqD;AAE5DG,WAAOV,MAAMM,UAAN,CAAiBD,IAAjB,CAAuBE,GAAvB,EAA6BI;AAFwB,IAAlB;AAAA,GAApC,CAAR;AAIAR,IAAEU,OAAF,CAAW,EAAEJ,OAAO,EAAT,EAAaC,OAAO,EAApB,EAAX;AACA,SAAOP,CAAP;AACA;;AAED;;;;AAIAtB,mBAAmB,yBAAnB,EAA8C;AAC7CiC,SAAO5B,GAAI,aAAJ,CADsC;AAE7C6B,QAAM,aAFuC;;AAI7C;;;;AAIAC,YAAU,SARmC;AAS7CC,YAAU;AACT;AACAC,SAAM;AAFG,GATmC;;AAc7CjB,cAAY;AACXC,YAAiB,EAAEiB,MAAM,QAAR,EAAmBC,SAAS,OAA5B,EADN;AAEX,gBAAiB,EAAED,MAAM,QAAR,EAAmBC,SAAS,MAA5B,EAFN;AAGXC,UAAiB,EAAEF,MAAM,QAAR,EAAmBC,SAAS,EAA5B,EAHN;AAIXR,aAAiB,EAAEO,MAAM,QAAR,EAAmBC,SAAS,EAA5B,EAJN;AAKXE,YAAiB,EAAEH,MAAM,QAAR,EAAmBC,SAAS,EAA5B,EALN;AAMXG,aAAiB,EAAEJ,MAAM,QAAR,EAAmBC,SAAS,CAA5B,EANN;AAOX,oBAAiB,EAAED,MAAM,SAAR,EAAmBC,SAAS,KAA5B;AAPN,GAdiC;;AAwB7C;;;;;;;;AAQAI,QAAMhC,YAAa,YAAW;AAC7B,UAAO;AACNY,eAAW,cADL;AAENE,gBAAY;AAFN,IAAP;AAIA,GALK,EAKD,UAAUN,KAAV,EAAkB;AACtB,OAAK,CAAEA,MAAMI,SAAN,CAAgBC,IAAlB,IAA0B,CAAEL,MAAMM,UAAN,CAAiBD,IAAlD,EAAyD;AACxD,WAAOnB,GAAI,YAAJ,CAAP;AACA;;AAED,YAASuC,QAAT,CAAmBC,IAAnB,EAA0B;AACzB,WAAO,UAAUC,GAAV,EAAgB;AACtB,SAAIC,UAAU,EAAd;AACAA,aAAQF,IAAR,IAAgBC,GAAhB;AACA3B,WAAM6B,aAAN,CAAqBD,OAArB;AACA,KAJD;AAKA;;AAED,OAAIE,kBAAkB,yBAAC,KAAD,CAAO,QAAP,OAAtB;AAAA,OACIC,eAAkB,yBAAC,KAAD,CAAO,QAAP,OADtB;;AAGA,OAAK,YAAY/B,MAAMC,UAAN,CAAiBC,OAAlC,EAA4C;AAC3C4B,sBAAkB,yBAAC,aAAD;AACjB,YAAQ5C,GAAI,WAAJ,CADS;AAEjB,YAAQc,MAAMC,UAAN,CAAiB,WAAjB,CAFS;AAGjB,cAAUb,IAAKE,KAAMU,MAAMI,SAAN,CAAgBC,IAAtB,CAAL,EAAmC,UAAEc,IAAF,EAAQX,GAAR;AAAA,aAAmB;AAC/DC,cAAOU,IADwD;AAE/DT,cAAOV,MAAMI,SAAN,CAAgBC,IAAhB,CAAqBc,IAArB,EAA2BR;AAF6B,OAAnB;AAAA,MAAnC,CAHO;AAOjB,eAAWc,SAAU,WAAV;AAPM,MAAlB;;AAUA,QAAK,CAAC,CAAEzB,MAAMC,UAAN,CAAiBW,QAAzB,EAAoC;AACnCmB,oBAAe,yBAAC,WAAD;AACd,aAAQ7C,GAAI,gBAAJ,CADM;AAEd,aAAQc,MAAMC,UAAN,CAAiBoB,KAFX;AAGd,gBAAWI,SAAU,OAAV;AAHG,OAAf;AAKA;AACD;;AAED,OAAIO,UACH;AAAC,SAAD,CAAO,QAAP;AAAA;AACC;AAAA;AAAA;AAAK9C,QAAI,8DAAJ;AAAL;AADD,IADD;;AAKA,UACC;AAAC,SAAD,CAAO,QAAP;AAAA;AACC;AAAC,sBAAD;AAAA;AACC,8BAAC,aAAD;AACC,aAAQA,GAAI,cAAJ,CADT;AAEC,aAAQc,MAAMC,UAAN,CAAiBC,OAF1B;AAGC,eAAU,CACT,EAAEO,OAAO,OAAT,EAAkBC,OAAOxB,GAAI,OAAJ,CAAzB,EADS,EAET,EAAEuB,OAAO,OAAT,EAAkBC,OAAOxB,GAAI,gBAAJ,CAAzB,EAFS,CAHX;AAOC,gBAAWuC,SAAU,SAAV;AAPZ,OADD;AAWGK,oBAXH;AAaC,8BAAC,aAAD;AACC,aAAQ5C,GAAI,UAAJ,CADT;AAEC,aAAQc,MAAMC,UAAN,CAAiBW,QAF1B;AAGC,eAAUb,sBAAuBC,KAAvB,CAHX;AAIC,gBAAWyB,SAAU,UAAV;AAJZ,OAbD;AAoBGM,iBApBH;AAsBC,8BAAC,aAAD;AACC,aAAQ7C,GAAI,SAAJ,CADT;AAEC,aAAQc,MAAMC,UAAN,CAAiBqB,OAF1B;AAGC,eAAU,CACT,EAAEb,OAAO,EAAT,EAAmBC,OAAOxB,GAAI,cAAJ,CAA1B,EADS,EAET,EAAEuB,OAAO,QAAT,EAAmBC,OAAOxB,GAAI,yBAAJ,CAA1B,EAFS,EAGT,EAAEuB,OAAO,OAAT,EAAmBC,OAAOxB,GAAI,uBAAJ,CAA1B,EAHS,CAHX;AAQC,gBAAWuC,SAAU,SAAV;AARZ,OAtBD;AAiCC,8BAAC,YAAD;AACC,aAAQvC,GAAI,eAAJ,CADT;AAEC,YAAOA,GAAI,oDAAJ,CAFR;AAGC,aAAQc,MAAMC,UAAN,CAAiBsB,QAAjB,IAA6B,CAHtC;AAIC,WAAM,CAJP;AAKC,WAAM,EALP;AAMC,gBAAWE,SAAU,UAAV;AANZ,OAjCD;AA0CC,8BAAC,aAAD;AACC,aAAQvC,GAAI,eAAJ,CADT;AAEC,YAAOA,GAAI,8BAAJ,CAFR;AAGC,eAAU,CAAC,CAAEc,MAAMC,UAAN,CAAiB,eAAjB,CAHd;AAIC,gBAAWwB,SAAU,eAAV;AAJZ;AA1CD,KADD;AAmDGO;AAnDH,IADD;AAwDA,GAtGK,CAhCuC;;AAwI7C;;;;;;;AAOAC,QAAM,gBAAW;AAChB,UACC;AAAA;AAAA;AAAO/C,OAAI,iDAAJ;AAAP,IADD;AAGA;AAnJ4C,EAA9C;AAqJA,CAvMD,EAwMCgD,OAAOtD,EAxMR","file":"block.js","sourcesContent":["( function( wp ) {\n\t/**\n\t * Registers a new block provided a unique name and an object defining its behavior.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/blocks#api\n\t */\n\tvar registerBlockType = wp.blocks.registerBlockType;\n\t/**\n\t * Returns a new element of given type. Element is an abstraction layer atop React.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/element#element\n\t */\n\tvar el = wp.element.createElement;\n\t/**\n\t * Retrieves the translation of text.\n\t * @see https://github.com/WordPress/gutenberg/tree/master/i18n#api\n\t */\n\tvar __ = wp.i18n.__;\n\n\tvar map = Array.map,\n\t    keys = Object.keys;\n\n\tvar withAPIData = wp.components.withAPIData;\n\n\tvar InspectorControls = wp.blocks.InspectorControls,\n\t    RangeControl      = wp.components.RangeControl,\n\t    SelectControl     = wp.components.SelectControl,\n\t    TextControl       = wp.components.TextControl,\n\t    ToggleControl     = wp.components.ToggleControl;\n\n\tfunction getFilteredTaxonomies( props ) {\n\t\tif ( 'posts' === props.attributes.display ) {\n\t\t\tlet r = map( props.postTypes.data[ props.attributes['post-type'] ].taxonomies, ( tax, idx ) => ( {\n\t\t\t\t\tvalue: tax,\n\t\t\t\t\tlabel: props.taxonomies.data[ tax ].name || taxonomy\n\t\t\t\t} ) );\n\t\t\tr.unshift( { value: '', label: '' } );\n\t\t\treturn r;\n\t\t}\n\n\t\tlet r = map( keys( props.taxonomies.data ), ( tax, idx ) => ( {\n\t\t\t\tvalue: tax,\n\t\t\t\tlabel: props.taxonomies.data[ tax ].name,\n\t\t\t} ) );\n\t\tr.unshift( { value: '', label: '' } );\n\t\treturn r;\n\t}\n\n\t/**\n\t * Every block starts by registering a new block type definition.\n\t * @see https://wordpress.org/gutenberg/handbook/block-api/\n\t */\n\tregisterBlockType( 'a-z-listing/a-z-listing', {\n\t\ttitle: __( 'A-Z Listing' ),\n\t\ticon: 'translation',\n\n\t\t/**\n\t\t * Blocks are grouped into categories to help users browse and discover them.\n\t\t * The categories provided by core are `common`, `embed`, `formatting`, `layout` and `widgets`.\n\t\t */\n\t\tcategory: 'widgets',\n\t\tsupports: {\n\t\t\t// Removes support for an HTML mode.\n\t\t\thtml: false,\n\t\t},\n\n\t\tattributes: {\n\t\t\tdisplay:         { type: 'string',  default: 'posts' },\n\t\t\t'post-type':     { type: 'string',  default: 'page'  },\n\t\t\tterms:           { type: 'string',  default: ''      },\n\t\t\ttaxonomy:        { type: 'string',  default: ''      },\n\t\t\tnumbers:         { type: 'string',  default: ''      },\n\t\t\tgrouping:        { type: 'number',  default: 1       },\n\t\t\t'group-numbers': { type: 'boolean', default: false   },\n\t\t},\n\n\t\t/**\n\t\t * The edit function describes the structure of your block in the context of the editor.\n\t\t * This represents what the editor will render when the block is used.\n\t\t * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#edit\n\t\t *\n\t\t * @param {Object} [props] Properties passed from the editor.\n\t\t * @return {Element}       Element to render.\n\t\t */\n\t\tedit: withAPIData( function() {\n\t\t\treturn {\n\t\t\t\tpostTypes: '/wp/v2/types',\n\t\t\t\ttaxonomies: '/wp/v2/taxonomies'\n\t\t\t};\n\t\t} )( function( props ) {\n\t\t\tif ( ! props.postTypes.data || ! props.taxonomies.data ) {\n\t\t\t\treturn __( \"Loading...\" );\n\t\t\t}\n\n\t\t\tfunction onChange( prop ) {\n\t\t\t\treturn function( val ) {\n\t\t\t\t\tvar propObj = {}\n\t\t\t\t\tpropObj[prop] = val\n\t\t\t\t\tprops.setAttributes( propObj );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar postTypeControl = <React.Fragment></React.Fragment>,\n\t\t\t    termsControl    = <React.Fragment></React.Fragment>;\n\n\t\t\tif ( 'posts' === props.attributes.display ) {\n\t\t\t\tpostTypeControl = <SelectControl\n\t\t\t\t\tlabel={ __( 'Post Type' ) }\n\t\t\t\t\tvalue={ props.attributes['post-type'] }\n\t\t\t\t\toptions={ map( keys( props.postTypes.data ), ( type, idx ) => ( {\n\t\t\t\t\t\tvalue: type,\n\t\t\t\t\t\tlabel: props.postTypes.data[type].name,\n\t\t\t\t\t} ) ) }\n\t\t\t\t\tonChange={ onChange( 'post-type' ) }\n\t\t\t\t/>\n\n\t\t\t\tif ( !! props.attributes.taxonomy ) {\n\t\t\t\t\ttermsControl = <TextControl\n\t\t\t\t\t\tlabel={ __( 'Taxonomy terms' ) }\n\t\t\t\t\t\tvalue={ props.attributes.terms }\n\t\t\t\t\t\tonChange={ onChange( 'terms' ) }\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar preview =\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<p>{ __( 'The A-Z Listing will appear here when viewed on your website' ) }</p>\n\t\t\t\t</React.Fragment>\n\n\t\t\treturn (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<InspectorControls>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Display mode' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.display }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: 'posts', label: __( 'Posts' ) },\n\t\t\t\t\t\t\t\t{ value: 'terms', label: __( 'Taxonomy terms' ) }\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ onChange( 'display' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ postTypeControl }\n\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Taxonomy' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.taxonomy }\n\t\t\t\t\t\t\toptions={ getFilteredTaxonomies( props ) }\n\t\t\t\t\t\t\tonChange={ onChange( 'taxonomy' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{ termsControl }\n\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={ __( 'Numbers' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.numbers }\n\t\t\t\t\t\t\toptions={ [\n\t\t\t\t\t\t\t\t{ value: '',       label: __( 'Hide numbers' ) },\n\t\t\t\t\t\t\t\t{ value: 'before', label: __( 'Prepend before alphabet' ) },\n\t\t\t\t\t\t\t\t{ value: 'after',  label: __( 'Append after alphabet' ) },\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\tonChange={ onChange( 'numbers' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Group letters' ) }\n\t\t\t\t\t\t\thelp={ __( 'The number of letters to include in a single group' ) }\n\t\t\t\t\t\t\tvalue={ props.attributes.grouping || 1 }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tmax={ 10 }\n\t\t\t\t\t\t\tonChange={ onChange( 'grouping' ) }\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Group numbers' ) }\n\t\t\t\t\t\t\thelp={ __( 'Group 0-9 as a single letter' ) }\n\t\t\t\t\t\t\tchecked={ !! props.attributes['group-numbers'] }\n\t\t\t\t\t\t\tonChange={ onChange( 'group-numbers' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InspectorControls>\n\n\t\t\t\t\t{ preview }\n\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t} ),\n\n\t\t/**\n\t\t * The save function defines the way in which the different attributes should be combined\n\t\t * into the final markup, which is then serialized by Gutenberg into `post_content`.\n\t\t * @see https://wordpress.org/gutenberg/handbook/block-edit-save/#save\n\t\t *\n\t\t * @return {Element}       Element to render.\n\t\t */\n\t\tsave: function() {\n\t\t\treturn (\n\t\t\t\t<div>{ __( 'The A-Z Listing plugin is not currently enabled' ) }</div>\n\t\t\t);\n\t\t}\n\t} );\n} )(\n\twindow.wp\n);\n"]}