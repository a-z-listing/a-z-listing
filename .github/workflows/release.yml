name: "ðŸš€ RELEASE: To WordPress.org"
on:
  push:
    tags:
      - "*"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Upvision'
    strategy:
      matrix:
        node: ['10.16.3']
        php: ['7.4']
    steps:
    - name: Use Node.js ${{ matrix.node }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: iconv, intl, soap, mbstring, mysql, mysqli, gd
        ini-values: phar.readonly=0
        tools: composer

    - name: Get composer cache directory
      id: composercache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache composer dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composercache.outputs.dir }}
        key: ${{ runner.os }}-composer-cache-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-cache-

    - uses: actions/checkout@v2

    - name: Install php-scoper
      run: |
        composer global config minimum-stability dev
        composer global require humbug/php-scoper --prefer-dist --no-interaction --no-progress

    - name: Install composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run php-scoper
      run: php-scoper add-prefix

    - name: Remove composer dev dependencies
      run: composer update --no-dev --optimize-autoloader --prefer-dist --no-interaction --no-progress

    - name: Run npm install
      run: |
        if [ -s "$HOME/.nvm/nvm.sh" ]; then \. "$HOME/.nvm/nvm.sh"; fi
        npm install

    - name: Run npm build
      run: |
        if [ -s "$HOME/.nvm/nvm.sh" ]; then \. "$HOME/.nvm/nvm.sh"; fi
        npm run build

    - name: Trim to production node_modules
      run: |
        rm -rf node_modules
        if [ -s "$HOME/.nvm/nvm.sh" ]; then \. "$HOME/.nvm/nvm.sh"; fi
        npm install --production --no-bin-links

    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build/**/*

    - name: Upload composer vendor dir
      uses: actions/upload-artifact@v2
      with:
        name: vendor
        path: vendor/**/*

    - name: Upload languages
      uses: actions/upload-artifact@v2
      with:
        name: languages
        path: languages/**/*

    - name: Upload styles
      uses: actions/upload-artifact@v2
      with:
        name: css
        path: css/**/*

  phpcs:
    name: phpcs
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Upvision'
    strategy:
      matrix:
        php: ['7.4']
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: iconv, intl, soap, mbstring, mysql, mysqli, gd
        ini-values: phar.readonly=0
        tools: phpcs

    - name: Configure PHPCS sniffs
      run: |
        git clone -b master --depth 1 https://github.com/WordPress/WordPress-Coding-Standards.git /tmp/sniffs
        phpcs --config-set installed_paths /tmp/sniffs

    - uses: actions/checkout@v2

    - name: Run PHPCS Coding Standards
      run: phpcs $GITHUB_WORKSPACE

  phpunit:
    name: phpunit
    needs: build
    strategy:
      matrix:
        multisite:
        - '0'
        - '1'
        mysql:
        - '5.7'
        php:
        - '7.0'
        - '7.1'
        - '7.2'
        - '7.3'
        - '7.4'
        wordpress:
        - '5.0'
        - '5.1'
        - '5.2'
        - '5.3'
        - '5.4'
        - latest
        - trunk
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306/tcp
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        extensions: iconv, intl, soap, mbstring, mysql, mysqli, gd
        ini-values: phar.readonly=0
        tools: phpunit:6.5.5

    - uses: actions/checkout@v2

    - name: Download build files
      uses: actions/download-artifact@v2

    - name: Install WordPress Test Suite
      run: ./bin/install-wp-tests.sh wordpress_test root root 127.0.0.1:${{ job.services.mysql.ports[3306] }} ${{ matrix.wordpress }}

    - name: Run phpunit
      run: |
        if [ ${{ matrix.multisite }} -eq 1 ]; then
          phpunit --verbose -c phpunit-multisite.xml
        else
          phpunit --verbose -c phpunit.xml.dist
        fi

  deploy_to_worg:
    name: Deploy to WordPress.org
    runs-on: ubuntu-latest
    if: github.repository_owner == 'Upvision'
    needs:
    - build
    - phpcs
    - phpunit
    steps:
    - uses: actions/checkout@v2

    - name: Download build files
      uses: actions/download-artifact@v2

    - name: WordPress Plugin Deploy
      uses: 10up/action-wordpress-plugin-deploy@1.5.0
      env:
        SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
        SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
        SLUG: a-z-listing
